import React from "react";
import { IDecoder } from "@impactdk/barcode-scanner";
declare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export interface IReactBarcodeScannerRef {
    start(): void;
    stop(): void;
}
export interface IReactBarcodeScannerProps {
    /**
     * @description
     * Props passed to underlying video element. ID is reserved for DOM access.
     */
    videoProps?: Omit<React.VideoHTMLAttributes<HTMLVideoElement>, "id" | "src">;
    /**
     * @description
     * Callback for when barcode is identified.
     */
    onFindBarcode: (barcode: string) => void;
    /**
     * @description
     * Supply decoder responsible for decoding the canvas context made by the scanner.
     *
     * @example
     * import { WasmDecoder } from "@impactdk/barcode-scanner";
     *
     * const decoder = WasmDecoder.getInstance("/public-path/assets"); // Path to assets installed through included cli.
     */
    decoder: IDecoder;
    /**
     * @description
     * If false, the consumer is responsible for starting the scanner through ref public API.
     *
     * @default true
     */
    initOnMount?: boolean;
}
/**
 * @example
 * import { WasmDecoder } from "@impactdk/barcode-scanner";
 * import { ReactBarcodeScanner, IReactBarcodeScannerRef } from "@impactdk/react-barcode-scanner";
 *
 * const scannerRef = useRef<IReactBarcodeScannerRef>(); // Access to public API, i.e. scannerRef?.start() or scannerRef?.stop().
 *
 * const decoder = WasmDecoder.getInstance("/public-path/asssets/barcode-scanner"); // Path to installed assets.
 *
 * return <ReactBarcodeScanner decoder={decoder} onFindBarcode={setBarcode} ref={scannerRef} />;
 */
export declare const ReactBarcodeScanner: React.ForwardRefExoticComponent<IReactBarcodeScannerProps & React.RefAttributes<IReactBarcodeScannerRef>>;
export {};
