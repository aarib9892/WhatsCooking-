(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('@impactdk/barcode-scanner')) :
    typeof define === 'function' && define.amd ? define('@impactdk/react-barcode-scanner', ['exports', 'react', '@impactdk/barcode-scanner'], factory) :
    (global = global || self, factory((global.impactdk = global.impactdk || {}, global.impactdk['react-barcode-scanner'] = {}), global.react, global.barcodeScanner));
}(this, function (exports, React, barcodeScanner) { 'use strict';

    var React__default = 'default' in React ? React['default'] : React;

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var videoId = "scanner-video";
    /**
     * @example
     * import { WasmDecoder } from "@impactdk/barcode-scanner";
     * import { ReactBarcodeScanner, IReactBarcodeScannerRef } from "@impactdk/react-barcode-scanner";
     *
     * const scannerRef = useRef<IReactBarcodeScannerRef>(); // Access to public API, i.e. scannerRef?.start() or scannerRef?.stop().
     *
     * const decoder = WasmDecoder.getInstance("/public-path/asssets/barcode-scanner"); // Path to installed assets.
     *
     * return <ReactBarcodeScanner decoder={decoder} onFindBarcode={setBarcode} ref={scannerRef} />;
     */
    var ReactBarcodeScanner = React.forwardRef(function (props, ref) {
        var videoProps = props.videoProps, onFindBarcode = props.onFindBarcode, decoder = props.decoder, _a = props.initOnMount, initOnMount = _a === void 0 ? true : _a;
        var scannerRef = React.useRef(null);
        React.useEffect(function () {
            if (initOnMount) {
                startScanner();
            }
            return handleUnmount;
        }, []);
        React.useImperativeHandle(ref, function () { return ({
            start: startScanner,
            stop: stopScanner
        }); });
        function startScanner() {
            if (scannerRef.current) {
                return;
            }
            var video = document.getElementById(videoId);
            scannerRef.current = new barcodeScanner.Scanner(video, decoder, (function () {
                var previousValue;
                return function (_a) {
                    var rawValue = _a.rawValue;
                    // Compare with previous value, to ensure the correct one has been found.
                    if (!previousValue || rawValue !== previousValue) {
                        previousValue = rawValue;
                        return;
                    }
                    onFindBarcode(rawValue);
                };
            })());
            scannerRef.current.start();
        }
        function stopScanner() {
            if (scannerRef.current != null) {
                scannerRef.current.stop();
                scannerRef.current = null;
            }
        }
        function handleUnmount() {
            stopScanner();
        }
        return (React__default.createElement("video", __assign({}, videoProps, { id: videoId })));
    });

    exports.ReactBarcodeScanner = ReactBarcodeScanner;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=impactdk-react-barcode-scanner.umd.js.map
