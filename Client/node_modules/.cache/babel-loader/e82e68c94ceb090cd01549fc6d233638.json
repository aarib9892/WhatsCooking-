{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aarib\\\\Desktop\\\\REACT_BootCamp\\\\whatsCooking\\\\Client\\\\src\\\\components\\\\Scandata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport \"./Scandata.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Scandata = props => {\n  _s();\n\n  const params = useParams();\n  const barcode = params.productbarcode;\n  const [macros, setmacros] = useState('');\n  useEffect(() => {\n    fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json`).then(response => response.json()).then(data => {\n      setmacros(data.product.nutriments);\n    }).catch(() => {\n      console.log(\"error\");\n    });\n  }, [barcode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-c\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nutritional info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Carbs:  \", macros.carbohydrates, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Proteins:  \", macros.proteins, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Fats: \", macros.fat, \"g\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Scandata, \"fsBkpBvN2VJ39vA7B7IcJ/3CzmI=\", false, function () {\n  return [useParams];\n});\n\n_c = Scandata;\nexport default Scandata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scandata\");","map":{"version":3,"sources":["C:/Users/aarib/Desktop/REACT_BootCamp/whatsCooking/Client/src/components/Scandata.js"],"names":["React","useState","useEffect","useParams","Scandata","props","params","barcode","productbarcode","macros","setmacros","fetch","then","response","json","data","product","nutriments","catch","console","log","carbohydrates","proteins","fat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,gBAAP;;;AAGA,MAAMC,QAAQ,GAACC,KAAK,IAAE;AAAA;;AAElB,QAAMC,MAAM,GAACH,SAAS,EAAtB;AACA,QAAMI,OAAO,GAACD,MAAM,CAACE,cAArB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CACA,kDAAiDJ,OAAQ,OADzD,CAAL,CAGGK,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdL,MAAAA,SAAS,CAACK,IAAI,CAACC,OAAL,CAAaC,UAAd,CAAT;AAED,KAPH,EAQGC,KARH,CAQS,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAVH;AAUK,GAXA,EAWC,CAACb,OAAD,CAXD,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAA,+BAAaE,MAAM,CAACY,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA,kCAAgBZ,MAAM,CAACa,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAA,6BAAWb,MAAM,CAACc,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAMnB,Q;UAEWD,S;;;KAFXC,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React , {useState , useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport \"./Scandata.css\"\r\n\r\n\r\nconst Scandata=props=>{\r\n\r\n    const params=useParams()\r\n    const barcode=params.productbarcode\r\n    const [macros, setmacros] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            `https://world.openfoodfacts.org/api/v0/product/${barcode}.json`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setmacros(data.product.nutriments)\r\n          \r\n          })\r\n          .catch(() => {\r\n            console.log(\"error\");\r\n          })},[barcode])\r\n   \r\n   \r\n  \r\n    return (\r\n        <div className='main-c'>\r\n       \r\n        <div className=\"cont\">\r\n        <h1>Nutritional info:</h1>\r\n         \r\n        <h2>Carbs:  {macros.carbohydrates}g</h2>\r\n        <h2>Proteins:  {macros.proteins}g</h2>\r\n        <h2>Fats: {macros.fat}g</h2>\r\n        </div>\r\n     \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default Scandata;"]},"metadata":{},"sourceType":"module"}