{"ast":null,"code":"const {\n  EventEmitter\n} = require('events');\n\nfunction transport({\n  connection,\n  subTopic,\n  pubTopic,\n  subscribe = true\n}) {\n  const emitter = new EventEmitter();\n\n  if (subscribe) {\n    connection.subscribe(subTopic);\n  }\n\n  connection.on('message', (topic, message) => {\n    if (topic === subTopic) {\n      try {\n        const msg = JSON.parse(message.toString());\n\n        if (msg.method || msg.id && ('result' in msg || 'error' in msg)) {\n          emitter.emit('rpc', msg);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  });\n\n  emitter.send = msg => {\n    connection.publish(pubTopic, JSON.stringify(msg));\n  };\n\n  return emitter;\n}\n\nmodule.exports = transport;","map":{"version":3,"sources":["C:/Users/aarib/Desktop/REACT_BootCamp/whatsCooking/node_modules/rawr/transports/mqtt/index.js"],"names":["EventEmitter","require","transport","connection","subTopic","pubTopic","subscribe","emitter","on","topic","message","msg","JSON","parse","toString","method","id","emit","err","console","error","send","publish","stringify","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,QAAD,CAAhC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,SAAS,GAAG;AAA9C,CAAnB,EAAyE;AACvE,QAAMC,OAAO,GAAG,IAAIP,YAAJ,EAAhB;;AACA,MAAIM,SAAJ,EAAe;AACbH,IAAAA,UAAU,CAACG,SAAX,CAAqBF,QAArB;AACD;;AACDD,EAAAA,UAAU,CAACK,EAAX,CAAc,SAAd,EAAyB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3C,QAAID,KAAK,KAAKL,QAAd,EAAwB;AACtB,UAAI;AACF,cAAMO,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,QAAR,EAAX,CAAZ;;AACA,YAAIH,GAAG,CAACI,MAAJ,IAAeJ,GAAG,CAACK,EAAJ,KAAW,YAAYL,GAAZ,IAAmB,WAAWA,GAAzC,CAAnB,EAAmE;AACjEJ,UAAAA,OAAO,CAACU,IAAR,CAAa,KAAb,EAAoBN,GAApB;AACD;AACF,OALD,CAKE,OAAOO,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;AACF,GAXD;;AAYAX,EAAAA,OAAO,CAACc,IAAR,GAAgBV,GAAD,IAAS;AACtBR,IAAAA,UAAU,CAACmB,OAAX,CAAmBjB,QAAnB,EAA6BO,IAAI,CAACW,SAAL,CAAeZ,GAAf,CAA7B;AACD,GAFD;;AAGA,SAAOJ,OAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBvB,SAAjB","sourcesContent":["const { EventEmitter } = require('events');\n\nfunction transport({ connection, subTopic, pubTopic, subscribe = true }) {\n  const emitter = new EventEmitter();\n  if (subscribe) {\n    connection.subscribe(subTopic);\n  }\n  connection.on('message', (topic, message) => {\n    if (topic === subTopic) {\n      try {\n        const msg = JSON.parse(message.toString());\n        if (msg.method || (msg.id && ('result' in msg || 'error' in msg))) {\n          emitter.emit('rpc', msg);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  });\n  emitter.send = (msg) => {\n    connection.publish(pubTopic, JSON.stringify(msg));\n  };\n  return emitter;\n}\n\nmodule.exports = transport;\n"]},"metadata":{},"sourceType":"script"}