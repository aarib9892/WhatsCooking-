{"ast":null,"code":"const {\n  EventEmitter\n} = require('events');\n\nfunction dom(webWorker) {\n  const emitter = new EventEmitter();\n  webWorker.addEventListener('message', msg => {\n    const {\n      data\n    } = msg;\n\n    if (data && (data.method || data.id && ('result' in data || 'error' in data))) {\n      emitter.emit('rpc', data);\n    }\n  });\n\n  emitter.send = msg => {\n    webWorker.postMessage(msg);\n  };\n\n  return emitter;\n}\n\nfunction worker() {\n  const emitter = new EventEmitter();\n\n  self.onmessage = msg => {\n    const {\n      data\n    } = msg;\n\n    if (data && (data.method || data.id && ('result' in data || 'error' in data))) {\n      emitter.emit('rpc', data);\n    }\n  };\n\n  emitter.send = msg => {\n    self.postMessage(msg);\n  };\n\n  return emitter;\n}\n\nfunction transport(webWorker) {\n  if (webWorker) {\n    return dom(webWorker);\n  }\n\n  return worker();\n} // backwards compat\n\n\ntransport.dom = dom;\ntransport.worker = worker;\nmodule.exports = transport;","map":{"version":3,"sources":["C:/Users/aarib/Desktop/REACT_BootCamp/whatsCooking/node_modules/rawr/transports/worker/index.js"],"names":["EventEmitter","require","dom","webWorker","emitter","addEventListener","msg","data","method","id","emit","send","postMessage","worker","self","onmessage","transport","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,QAAD,CAAhC;;AAEA,SAASC,GAAT,CAAaC,SAAb,EAAwB;AACtB,QAAMC,OAAO,GAAG,IAAIJ,YAAJ,EAAhB;AACAG,EAAAA,SAAS,CAACE,gBAAV,CAA2B,SAA3B,EAAuCC,GAAD,IAAS;AAC7C,UAAM;AAAEC,MAAAA;AAAF,QAAWD,GAAjB;;AACA,QAAIC,IAAI,KAAKA,IAAI,CAACC,MAAL,IAAgBD,IAAI,CAACE,EAAL,KAAY,YAAYF,IAAZ,IAAoB,WAAWA,IAA3C,CAArB,CAAR,EAAiF;AAC/EH,MAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoBH,IAApB;AACD;AACF,GALD;;AAMAH,EAAAA,OAAO,CAACO,IAAR,GAAgBL,GAAD,IAAS;AACtBH,IAAAA,SAAS,CAACS,WAAV,CAAsBN,GAAtB;AACD,GAFD;;AAGA,SAAOF,OAAP;AACD;;AAED,SAASS,MAAT,GAAkB;AAChB,QAAMT,OAAO,GAAG,IAAIJ,YAAJ,EAAhB;;AACAc,EAAAA,IAAI,CAACC,SAAL,GAAkBT,GAAD,IAAS;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,GAAjB;;AACA,QAAIC,IAAI,KAAKA,IAAI,CAACC,MAAL,IAAgBD,IAAI,CAACE,EAAL,KAAY,YAAYF,IAAZ,IAAoB,WAAWA,IAA3C,CAArB,CAAR,EAAiF;AAC/EH,MAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoBH,IAApB;AACD;AACF,GALD;;AAMAH,EAAAA,OAAO,CAACO,IAAR,GAAgBL,GAAD,IAAS;AACtBQ,IAAAA,IAAI,CAACF,WAAL,CAAiBN,GAAjB;AACD,GAFD;;AAGA,SAAOF,OAAP;AACD;;AAED,SAASY,SAAT,CAAmBb,SAAnB,EAA8B;AAC5B,MAAIA,SAAJ,EAAe;AACb,WAAOD,GAAG,CAACC,SAAD,CAAV;AACD;;AACD,SAAOU,MAAM,EAAb;AACD,C,CAED;;;AACAG,SAAS,CAACd,GAAV,GAAgBA,GAAhB;AACAc,SAAS,CAACH,MAAV,GAAmBA,MAAnB;AAEAI,MAAM,CAACC,OAAP,GAAiBF,SAAjB","sourcesContent":["const { EventEmitter } = require('events');\n\nfunction dom(webWorker) {\n  const emitter = new EventEmitter();\n  webWorker.addEventListener('message', (msg) => {\n    const { data } = msg;\n    if (data && (data.method || (data.id && ('result' in data || 'error' in data)))) {\n      emitter.emit('rpc', data);\n    }\n  });\n  emitter.send = (msg) => {\n    webWorker.postMessage(msg);\n  };\n  return emitter;\n}\n\nfunction worker() {\n  const emitter = new EventEmitter();\n  self.onmessage = (msg) => {\n    const { data } = msg;\n    if (data && (data.method || (data.id && ('result' in data || 'error' in data)))) {\n      emitter.emit('rpc', data);\n    }\n  };\n  emitter.send = (msg) => {\n    self.postMessage(msg);\n  };\n  return emitter;\n}\n\nfunction transport(webWorker) {\n  if (webWorker) {\n    return dom(webWorker);\n  }\n  return worker();\n}\n\n// backwards compat\ntransport.dom = dom;\ntransport.worker = worker;\n\nmodule.exports = transport;\n"]},"metadata":{},"sourceType":"script"}